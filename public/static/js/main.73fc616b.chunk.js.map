{"version":3,"sources":["assets/Logo.png","assets/Profile.png","containers/login/styled.ts","containers/login/constants.ts","containers/login/actions.ts","containers/login/helpers.ts","components/Notification/index.tsx","containers/login/index.tsx","components/DeleteModal/index.tsx","components/PlanCard/styled.ts","components/PlanCard/index.tsx","containers/dashboard/plans/contants.ts","containers/dashboard/plans/helpers.tsx","containers/dashboard/plans/actions.ts","components/PlanModal/index.tsx","containers/dashboard/plans/index.tsx","containers/dashboard/efficiency/styled.ts","containers/dashboard/efficiency/helpers.ts","components/Table/index.tsx","components/Charts/index.tsx","containers/dashboard/efficiency/index.tsx","containers/dashboard/helpers.tsx","containers/dashboard/styled.ts","containers/dashboard/index.tsx","containers/notFound/index.tsx","App.tsx","serviceWorker.ts","utils/index.ts","containers/login/sagas.ts","containers/dashboard/plans/sagas.ts","joinSagas.ts","containers/login/reducer.ts","containers/dashboard/plans/reducer.ts","joinReducers.ts","index.tsx"],"names":["module","exports","LoginContainer","styled","Card","breakpoint","Container","div","HeaderContainer","LogoContainer","prefix","LOGIN_START","LOGIN_SUCCESS","LOGIN_FAIL","LOGIN_START_SAGAS","REGISTER_START","REGISTER_SUCCESS","REGISTER_FAIL","REGISTER_START_SAGAS","CLOSE_NOTIFICATION","makeLogin","form","history","username","password","type","makeRegister","name","lastname","formatFormData","id","setValues","value","nameValidator","variantIcon","success","CheckCircleIcon","warning","WarningIcon","error","ErrorIcon","info","InfoIcon","useStyles1","makeStyles","theme","backgroundColor","green","palette","dark","primary","main","amber","icon","fontSize","iconVariant","opacity","marginRight","spacing","message","display","alignItems","MySnackbarContentWrapper","props","classes","className","onClose","variant","other","Icon","SnackbarContent","clsx","aria-describedby","action","IconButton","key","aria-label","color","onClick","CustomizedSnackbars","handleClose","open","Snackbar","anchorOrigin","vertical","horizontal","autoHideDuration","componentRouter","withRouter","dispatch","state","useState","register","setRegister","setForm","tabIndex","onKeyDown","e","keycode","console","log","handleEnter","keyCode","feedBack","Button","src","Logo","width","alt","TextField","test","onChange","target","style","marginBottom","label","fullWidth","disabled","size","loading","CircularProgress","marginTop","connect","LoginReducer","DeleteModal","handleAccept","Dialog","DialogTitle","DialogContent","DialogContentText","DialogActions","autoFocus","bounceIn","keyframes","CardContainer","delay","PlansCard","min","max","rate","duration","handleDelete","handleEdit","title","created_at","owner","isFeature","CardHeader","avatar","Avatar","subheader","moment","format","CardContent","Typography","component","CardActions","OPEN_NOTIFICATION","PLANS_START_SAGAS","PLANS_SET_PLANS","PLAN_DELETE_SAGAS","PLAN_DELETE_SUCCESS","PLAN_ADD_SAGAS","PLAN_ADD_SUCCESS","PLAN_EDIT_SAGAS","PLAN_EDIT_SUCCESS","handleAcept","active","setModal","handleAddAcept","setAddModal","agentId","isEdit","planid","plan","agenteid","addPlan","fields","end","initialState","mininvest","maxinvest","monthlyrate","PlanModal","initialForm","map","margin","defaultValue","InputProps","startAdornment","InputAdornment","position","Plans","modal","addModal","activePlan","setActivePlan","setIsEdit","user","localStorage","getItem","JSON","parse","useEffect","notification","Fab","zIndex","right","bottom","plans","find","Grid","container","data","forEach","i","isinitialplan","push","xs","md","sm","item","modalHandler","buttonHandler","editHandler","drawPlans","EfficiencyContainer","CustomPaper","Paper","months","getNextMonth","month","TableComponent","actualCalc","Fade","in","undefined","overflowX","Table","TableHead","TableRow","TableCell","align","TableBody","actual","acc","Charts","height","top","left","strokeDasharray","dataKey","stroke","Efficiency","setActualCalc","ammount","setAmmount","isTable","setIsTable","limits","setLimits","InputLabel","Select","labelId","selected","handlePlanSelection","MenuItem","Number","helperText","invest","payload","initialMonth","initialInvest","nextInvest","nextMonth","monthlyRatePlan","getListItems","dataItems","drawer","activeSection","Items","exit","ListItem","button","clear","handleClick","ListItemIcon","ListItemText","InformationContainer","ImageContainer","MainContainer","isDrawerOpen","setDrawerOpen","setActiveSection","AppBar","Toolbar","edge","noWrap","Drawer","List","ProfilePicture","firstname","AppsIcon","AssignmentIndIcon","ExitToAppIcon","section","getSection","PlanesReducer","NotFound","App","path","Login","exact","Dashboard","Boolean","window","location","hostname","match","process","env","NODE_ENV","apiRoute","controller","loginWorker","registerWorker","loginWatcher","registerWatcher","takeEvery","Eff","put","loginData","Axios","post","response","setItem","stringify","setTimeout","registerData","plansWorker","plansDeleteWorker","plansAddWorker","plansEditWorker","plansWatcher","plansDeleteWatcher","plansAddWatcher","plansEditWatcher","get","delete","planId","notNulls","Object","keys","filter","body","all","fork","initState","produce","draft","reducers","result","planIndex","findIndex","editedFields","editedPlan","field","customHistory","createBrowserHistory","rootReducer","combineReducers","sagaMiddleware","createSagaMiddleware","store","createStore","applyMiddleware","run","rootSagas","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"yGAAAA,EAAOC,QAAU,IAA0B,kC,oBCA3CD,EAAOC,QAAU,IAA0B,qC,6rDCIpC,IAAMC,EAAiBC,YAAOC,IAAPD,CAAH,IAOrBE,YAAW,UAAXA,CAPqB,MAYdC,EAAYH,IAAOI,IAAV,KAYTC,EAAkBL,IAAOI,IAAV,KAOfE,EAAgBN,IAAOI,IAAV,KCnCpBG,EAAS,mBACFC,EAAW,UAAMD,EAAN,gBACXE,EAAa,UAAMF,EAAN,kBACbG,EAAU,UAAMH,EAAN,eACVI,EAAiB,UAAMJ,EAAN,sBAEjBK,EAAc,UAAML,EAAN,mBACdM,EAAgB,UAAMN,EAAN,qBAChBO,EAAa,UAAMP,EAAN,kBACbQ,EAAoB,UAAMR,EAAN,yBAEpBS,EAAkB,UAAMT,EAAN,uBCFxB,SAASU,EAAUC,EAAWC,GAAc,IACzCC,EAAuBF,EAAvBE,SAAUC,EAAaH,EAAbG,SAChB,MAAO,CACLC,KAAMX,EACNS,WACAC,WACAF,WAIC,SAASI,EAAaL,EAAWC,GAAe,IAC7CC,EAAuCF,EAAvCE,SAAUC,EAA6BH,EAA7BG,SAAUG,EAAmBN,EAAnBM,KAAMC,EAAaP,EAAbO,SAChC,MAAO,CACLH,KAAMP,EACNK,WACAC,WACAG,OACAC,WACAN,W,oBC1BOO,EAAiB,SAACC,EAAWT,EAAWU,EAAgBC,GACjE,OAAOD,EAAU,eAAIV,EAAL,eAAYS,EAAKE,MAGxBC,EAAgB,4B,0KCQvBC,GAAc,CAClBC,QAASC,IACTC,QAASC,KACTC,MAAOC,IACPC,KAAMC,KAGFC,GAAaC,cAAW,SAACC,GAAD,MAAmB,CAC/CV,QAAS,CACPW,gBAAiBC,KAAM,MAEzBR,MAAO,CACLO,gBAAiBD,EAAMG,QAAQT,MAAMU,MAEvCR,KAAM,CACJK,gBAAiBD,EAAMG,QAAQE,QAAQC,MAEzCd,QAAS,CACPS,gBAAiBM,KAAM,MAEzBC,KAAM,CACJC,SAAU,IAEZC,YAAa,CACXC,QAAS,GACTC,YAAaZ,EAAMa,QAAQ,IAE7BC,QAAS,CACPC,QAAS,OACTC,WAAY,cAahB,SAASC,GAAyBC,GAChC,IAAMC,EAAUrB,KACRsB,EAAmDF,EAAnDE,UAAWN,EAAwCI,EAAxCJ,QAASO,EAA+BH,EAA/BG,QAASC,EAAsBJ,EAAtBI,QAAYC,EAFH,YAEaL,EAFb,6CAGxCM,EAAOnC,GAAYiC,GAEzB,OACE,kBAACG,GAAA,EAAD,eACEL,UAAWM,YAAKP,EAAQG,GAAUF,GAClCO,mBAAiB,kBACjBb,QACE,0BAAM7B,GAAG,kBAAkBmC,UAAWD,EAAQL,SAC5C,kBAACU,EAAD,CAAMJ,UAAWM,YAAKP,EAAQX,KAAMW,EAAQT,eAC3CI,GAGLc,OAAQ,CACN,kBAACC,GAAA,EAAD,CAAYC,IAAI,QAAQC,aAAW,QAAQC,MAAM,UAAUC,QAASZ,GAClE,kBAAC,KAAD,CAAWD,UAAWD,EAAQX,UAG9Be,IAMK,SAASW,GAAT,GAA2E,IAA7CpB,EAA4C,EAA5CA,QAASQ,EAAmC,EAAnCA,QAASa,EAA0B,EAA1BA,YAAaC,EAAa,EAAbA,KAC1E,OACE,6BACE,kBAACC,GAAA,EAAD,CACEC,aAAc,CACZC,SAAU,MACVC,WAAY,SAEdJ,KAAMA,EACNK,iBAAkB,IAClBpB,QAASc,GAET,kBAAClB,GAAD,CACEI,QAASc,EACTC,KAAMA,EACNd,QAASA,EACTR,QAASA,M,yBCVb4B,GAAkBC,aAlEV,SAAC,GAAoC,IAAnCC,EAAkC,EAAlCA,SAAUC,EAAwB,EAAxBA,MAAOpE,EAAiB,EAAjBA,QAAiB,EACZqE,oBAAS,GADG,mBACtCC,EADsC,KAC5BC,EAD4B,OAEpBF,mBAAS,CAACpE,SAAS,GAAIC,SAAU,GAAIG,KAAK,GAAIC,SAAU,KAFpC,mBAEtCP,EAFsC,KAEhCyE,EAFgC,KAG9C,OACI,kBAACxF,EAAD,CAAWyF,SAAU,EACjBC,UAAW,SAACC,GAAD,OAAQ5E,EAAKE,UAAYF,EAAKG,SAhBjC,SAAC0E,EAAgBN,EAAkBtE,EAAaD,EAAUoE,GAC1D,KAAZS,IACIN,EACAH,EAAS/D,EAAaL,EAAMC,KAE5B6E,QAAQC,IAAI,MACZX,EAASrE,EAAUC,EAAMC,MAU4B+E,CAAYJ,EAAEK,QAASV,EAAUtE,EAASD,EAAMoE,GAAY,OACzH,kBAACV,GAAD,CACIpB,QAAS+B,EAAMa,SAAS5C,QACxBQ,QAASuB,EAAMa,SAASpE,QACxB6C,YAAa,kBAAMS,EHGlB,CACLhE,KAAMN,KGHF8D,KAAMS,EAAMa,SAAStB,OACzB,kBAAC/E,EAAD,KACI,kBAACM,EAAD,KACI,6BACI,kBAACgG,EAAA,EAAD,CACI3B,MAAQe,EAAuB,UAAZ,UACnBd,QAAS,kBAAMe,GAAY,KAF/B,WAGA,kBAACW,EAAA,EAAD,CAAQ3B,MAAOe,EAAW,UAAY,UAClCd,QAAS,kBAAMe,GAAY,KAD/B,gBAIJ,kBAACpF,EAAD,KACI,yBAAKgG,IAAKC,KAAMC,MAAO,OAAQC,IAAI,iBAEtChB,EAAW,oCACR,kBAACiB,EAAA,EAAD,CACItE,OAAQN,EAAc6E,KAAKzF,EAAKM,MAChCoF,SAAU,SAACd,GAAD,OAAOpE,EAAe,OAAQR,EAAMyE,EAASG,EAAEe,OAAOhF,QAChEiF,MAAO,CAACC,aAAc,QAASC,MAAM,SAAShD,QAAQ,WAAWiD,WAAS,IAC9E,kBAACP,EAAA,EAAD,CACItE,OAAQN,EAAc6E,KAAKzF,EAAKO,UAChCmF,SAAU,SAACd,GAAD,OAAOpE,EAAe,WAAYR,EAAMyE,EAASG,EAAEe,OAAOhF,QACpEiF,MAAO,CAACC,aAAc,QAASC,MAAM,WAAWhD,QAAQ,WAAWiD,WAAS,KAC9E,KAEN,kBAACP,EAAA,EAAD,CACIE,SAAU,SAACd,GAAD,OAAOpE,EAAe,WAAYR,EAAMyE,EAASG,EAAEe,OAAOhF,QACpEiF,MAAO,CAACC,aAAc,QAASC,MAAM,oBAAoBhD,QAAQ,WAAWiD,WAAS,IACzF,kBAACP,EAAA,EAAD,CACIpF,KAAK,WACLsF,SAAU,SAACd,GAAD,OAAOpE,EAAe,WAAYR,EAAMyE,EAASG,EAAEe,OAAOhF,QACpEiF,MAAO,CAACC,aAAc,QAASC,MAAM,gBAAahD,QAAQ,WAAWiD,WAAS,IAClF,kBAACZ,EAAA,EAAD,CACIa,UAAWhG,EAAKE,WAAaF,EAAKG,SAClCsD,QAAS,kBAAMW,EAASG,EAAWlE,EAAaL,EAAMC,GAAWF,EAAUC,EAAMC,KACjF6C,QAAQ,YAAYU,MAAM,UAAUyC,KAAK,SAH7C,WAIF5B,EAAM6B,QAAU,kBAACC,EAAA,EAAD,CAAkBP,MAAO,CAACQ,UAAW,UAAa,WAsB7DC,gBAfS,SAAChC,GAErB,MAAO,CACHA,MAFqBA,EAAjBiC,iBAMe,SAAClC,GACxB,MAAO,CACHA,cAMOiC,CAA6CnC,I,8PC5D7CqC,GApBK,SAAC,GAAD,IAAE5C,EAAF,EAAEA,YAAaC,EAAf,EAAeA,KAAM4C,EAArB,EAAqBA,aAArB,OAA6C,kBAACC,GAAA,EAAD,CAC7D7C,KAAMA,EACNf,QAAS,kBAAMc,MAEf,kBAAC+C,GAAA,EAAD,KAAc,iDACd,kBAACC,GAAA,EAAD,KACA,kBAACC,GAAA,EAAD,gFAIA,kBAACC,GAAA,EAAD,KACA,kBAAC1B,EAAA,EAAD,CAAQ1B,QAAS,kBAAME,KAAeH,MAAM,WAA5C,YAGA,kBAAC2B,EAAA,EAAD,CAAQ1B,QAAS,kBAAM+C,KAAgBhD,MAAM,UAAUsD,WAAS,GAAhE,e,y4BCjBJ,IAAMC,GAAWC,YAAH,MAuCDC,GAAgBnI,IAAOI,IAAV,KAEL6H,IACE,qBAAEG,SCcVC,GAxCG,SAAC,GAAD,IAAEC,EAAF,EAAEA,IAAKC,EAAP,EAAOA,IAAKC,EAAZ,EAAYA,KAAMC,EAAlB,EAAkBA,SAAUL,EAA5B,EAA4BA,MAAOM,EAAnC,EAAmCA,aAAcC,EAAjD,EAAiDA,WAAYhH,EAA7D,EAA6DA,GAAIiH,EAAjE,EAAiEA,MAAOC,EAAxE,EAAwEA,WAAYC,EAApF,EAAoFA,MAAOC,EAA3F,EAA2FA,UAA3F,OAAiH,kBAACZ,GAAD,CAAeC,MAAOA,GACzJ,kBAACnI,EAAA,EAAD,KACA,kBAAC+I,GAAA,EAAD,CACEC,OACE,kBAACC,GAAA,EAAD,CAAQzE,aAAW,UAChBqE,EAAM,IAAM,KAGjBF,MAAOA,EACPO,UAAWC,KAAOP,GAAYQ,OAAO,QAEvC,kBAACC,GAAA,EAAD,KACE,kBAACC,GAAA,EAAD,CAAYvF,QAAQ,QAAQU,MAAM,gBAAgB8E,UAAU,KAA5D,sBACsBlB,GAEtB,kBAACiB,GAAA,EAAD,CAAYvF,QAAQ,QAAQU,MAAM,gBAAgB8E,UAAU,KAA5D,sBACsBjB,GAEtB,kBAACgB,GAAA,EAAD,CAAYvF,QAAQ,QAAQU,MAAM,gBAAgB8E,UAAU,KAA5D,kBACkBhB,EADlB,MAGA,kBAACe,GAAA,EAAD,CAAYvF,QAAQ,QAAQU,MAAM,gBAAgB8E,UAAU,KAA5D,8BAC8Bf,IAGhC,kBAACgB,GAAA,EAAD,KACKV,EAOG,kBAACQ,GAAA,EAAD,CAAYvF,QAAQ,YAAYU,MAAM,WAAtC,iBAPU,oCACd,kBAACH,GAAA,EAAD,CAAYE,aAAW,OAAOE,QAAS,kBAAMgE,EAAWhH,KACxD,kBAAC,KAAD,OAEF,kBAAC4C,GAAA,EAAD,CAAYE,aAAW,SAASE,QAAS,kBAAM+D,EAAa/G,KAC1D,kBAAC,KAAD,YCrDEpB,GAAS,8BAEFS,GAAkB,UAAMT,GAAN,4BAClBmJ,GAAiB,UAAMnJ,GAAN,2BAEjBoJ,GAAiB,UAAMpJ,GAAN,qBACjBqJ,GAAe,UAAMrJ,GAAN,oBAEfsJ,GAAiB,UAAMtJ,GAAN,sBACjBuJ,GAAmB,UAAMvJ,GAAN,wBAGnBwJ,GAAc,UAAMxJ,GAAN,mBACdyJ,GAAgB,UAAMzJ,GAAN,qBAEhB0J,GAAe,UAAM1J,GAAN,oBACf2J,GAAiB,UAAM3J,GAAN,sBCC9B,IAkCa4J,GAAc,SAACC,EAAgB9E,EAAe+E,GACvDA,GAAS,GACT/E,EC3CO,CACHhE,KAAMuI,GACNlI,GDyCgByI,KAIXE,GAAiB,SAAChF,EAAepE,EAAWqJ,EAAkBC,EAAiBC,EAAiBC,GAErGpF,EADAmF,ECjCG,CACHnJ,KAAM2I,GACNU,KDgCkBzJ,EC/BlBS,GD+BwB+I,GC3CzB,SAAiBC,EAAWC,GAC/B,MAAO,CACHtJ,KAAMyI,GACNY,OACAC,YDyCSC,CAAQ3J,EAAMsJ,IAE3BD,GAAY,I,UE9CVO,GAAS,CACX,CAAE9D,MAAO,SAAUrF,GAAI,OAAQoJ,IAAK,IACpC,CAAE/D,MAAO,sBAAoBrF,GAAI,YAAaoJ,IAAK,KACnD,CAAE/D,MAAO,sBAAoBrF,GAAI,YAAaoJ,IAAK,KACnD,CAAE/D,MAAO,eAAgBrF,GAAI,cAAeoJ,IAAK,KACjD,CAAE/D,MAAO,oBAAqBrF,GAAI,WAAYoJ,IAAK,YAGjDC,GAAe,CACjBxJ,KAAM,KACNyJ,UAAW,KACXC,UAAW,KACXC,YAAa,KACb1C,SAAU,MA2CC2C,GAtCG,SAAC,GAAiE,IAAhEtG,EAA+D,EAA/DA,KAAMD,EAAyD,EAAzDA,YAAasF,EAA4C,EAA5CA,YAAaM,EAA+B,EAA/BA,OAAQY,EAAuB,EAAvBA,YAAuB,EACrD7F,mBAAS6F,GAA4BL,IADgB,mBACvE9J,EADuE,KACjEyE,EADiE,KAE/E,OACI,kBAACgC,GAAA,EAAD,CAAQ7C,KAAMA,EAAMf,QAAS,kBAAMc,MAC/B,kBAAC+C,GAAA,EAAD,CAAajG,GAAG,qBAAhB,8BACA,kBAACkG,GAAA,EAAD,KACA,kBAACC,GAAA,EAAD,oEAGEgD,GAAOQ,KAAI,gBAAEtE,EAAF,EAAEA,MAAOrF,EAAT,EAASA,GAAIoJ,EAAb,EAAaA,IAAb,OAA6B,kBAACrE,EAAA,EAAD,CACtC6E,OAAO,QACP5J,GAAIA,EACJqF,MAAOA,EACP1F,KAAa,SAAPK,EAAgB,OAAS,SAC/BsF,WAAS,EACTuE,aAAcf,EAASY,EAAY1J,GAAM,GACzC6C,IAAK7C,EACL8J,WAAY,CACRC,eAAgB,kBAACC,GAAA,EAAD,CAAgBC,SAAS,OAAOb,IAEpDnE,SAAU,SAACd,GAAD,OAAOH,EAAQ,eAAIzE,EAAL,eAAYS,EAAMmE,EAAEe,OAAOhF,UACnDmC,QAAQ,iBAGZ,kBAAC+D,GAAA,EAAD,KACA,kBAAC1B,EAAA,EAAD,CAAQ1B,QAAS,kBAAME,KAAeH,MAAM,WAA5C,YAGA,kBAAC2B,EAAA,EAAD,CACIa,WAAYhG,EAAKuH,WAAavH,EAAKgK,YAAchK,EAAK+J,YAAc/J,EAAKiK,cAAgBjK,EAAKM,QAAUiJ,EACxG9F,QAAS,kBAAMwF,EAAYjJ,IAAOwD,MAAM,WAF5C,cCVGmH,GAtCD,SAAC,GAA2B,IAA1BvG,EAAyB,EAAzBA,SAAUC,EAAe,EAAfA,MAAe,EACTC,oBAAS,GADA,mBAC7BsG,EAD6B,KACtBzB,EADsB,OAEH7E,oBAAS,GAFN,mBAE7BuG,EAF6B,KAEnBxB,EAFmB,OAGC/E,qBAHD,mBAG7BwG,EAH6B,KAGjBC,EAHiB,OAIPzG,oBAAS,GAJF,mBAI7BiF,EAJ6B,KAIrByB,EAJqB,KAK/BC,EAAWC,aAAaC,QAAQ,QALD,EAMRC,KAAKC,MAAMJ,GAAhCxK,EAN6B,EAM7BA,GAAIP,EANyB,EAMzBA,SAIZ,OAHAoL,qBAAU,WACNlH,EFpBG,CACHhE,KAAMqI,GACNa,QEkBkB7I,MACnB,IACK,6BACJ,kBAACiD,GAAD,CACApB,QAAS+B,EAAMkH,aAAalH,MAC5BvB,QAASuB,EAAMkH,aAAazI,QAC5Ba,YAAa,kBAAMS,EFUhB,CACHhE,KAAMN,MEVN8D,KAAMS,EAAMkH,aAAa3H,OACzB,kBAAC4H,GAAA,EAAD,CACI/H,QAAS,kBAAM4F,GAAY,IAC3BzD,MAAO,CAAC8E,SAAU,QAASe,OAAQ,EAAGC,MAAO,GAAIC,OAAQ,IAAKnI,MAAM,WACpE,kBAAC,KAAD,OAEJ,kBAAC,GAAD,CAAagD,aAAc,kBAAMyC,GAAY6B,EAAY1G,EAAU+E,IAAWvF,KAAMgH,EAAOjH,YAAa,kBAAMwF,GAAS,MAEnH0B,EAAW,kBAAC,GAAD,CACXV,YAAa9F,EAAMuH,MAAMC,MAAK,qBAAEpL,KAAmBqK,KACnDvB,OAAQA,EACRN,YAAa,SAACjJ,GAAD,OAAUoJ,GAAehF,EAAUpE,EAAMqJ,EAAa5I,EAAI8I,EAAQuB,IAC/EnH,YAAa,kBAjCL,SAACwF,EAAc4B,EAAmBC,GAClD7B,GAAS,GACT4B,GAAe,GACfC,GAAU,GA8BiBrH,CAAY0F,EAAa0B,EAAeC,IAAYpH,KAAMiH,IAAe,KAEhG,kBAACiB,GAAA,EAAD,CAAMC,WAAS,EAAC1J,QAAS,GAErBgC,EAAMuH,MHjBO,SAACI,EAAkB7C,EAAc4B,EAAoB1B,EAAkB2B,EAAgB9K,GAC5G,IAAMyK,EAAY,GAkBtB,OAjBIqB,EAAKC,SAAQ,WAAqFC,GAArF,IAAE5L,EAAF,EAAEA,KAAMG,EAAR,EAAQA,GAAIuJ,EAAZ,EAAYA,UAAWD,EAAvB,EAAuBA,UAAWE,EAAlC,EAAkCA,YAAakC,EAA/C,EAA+CA,cAAe5E,EAA9D,EAA8DA,SAAUI,EAAxE,EAAwEA,WAAxE,OAA2FgD,EAAMyB,KAC9G,kBAACN,GAAA,EAAD,CAAMO,GAAI,GAAIC,GAAI,EAAGC,GAAI,EAAGC,MAAI,EAAClJ,IAAK7C,GAClC,kBAAC,GAAD,CACIkH,WAAYA,EACZT,MAAK,UAAKgF,EAAI,GAAT,KACLrE,UAAWsE,EACXvE,MAAO1H,EACPwH,MAAOpH,EACPG,GAAIA,EACJ+G,aAAc,SAAC/G,GAAD,OAvBJ,SAACgM,EAAwC1B,EAAqCtK,GAChGgM,GAAa,GACb1B,EAActK,GAqBgBiM,CAAcvD,EAAU4B,EAAetK,IAC7DgH,WAAY,SAAChH,GAAD,OAnBJ,SAACmK,EAAYG,EAAoBtK,EAAYuK,GAE7DA,GAAU,GACVD,EAActK,GACdmK,GAAM,GAesB+B,CAAYtD,EAAa0B,EAAetK,EAAIuK,IAChE3D,IAAK2C,EACL5C,IAAK2C,EACLzC,KAAM2C,EACN1C,SAAUA,SAGfoD,EGFmBiC,CAAUvI,EAAMuH,MAAOzC,EAAU4B,EAAe1B,EAAa2B,EAAW9K,GAAY,Q,qXC3CvG,IAAM2M,GAAsB/N,IAAOI,IAAV,MAOnB4N,GAAchO,YAAOiO,KAAPjO,CAAH,MCRlBkO,GAAS,CAAC,QAAQ,UAAU,QAAS,QAAS,OAAQ,QAAS,QAAS,SAAU,aAAc,UAAW,YAAY,aAwBvHC,GAAe,SAACC,GAClB,OAAa,KAAVA,EAAqB,EACjBA,EAAQ,G,4DCaJC,GAvBQ,SAAC,GAAD,IAAEC,EAAF,EAAEA,WAAF,OAAwB,kBAACC,GAAA,EAAD,CAAMC,QAAmBC,IAAfH,GACzD,yBAAKxH,MAAO,CAACN,MAAO,OAAQkI,UAAW,SACnC,kBAACC,GAAA,EAAD,CAAOlK,aAAW,gBAClB,kBAACmK,GAAA,EAAD,KACI,kBAACC,GAAA,EAAD,KACA,kBAACC,GAAA,EAAD,0BACA,kBAACA,GAAA,EAAD,CAAWC,MAAM,QAAjB,kBACA,kBAACD,GAAA,EAAD,CAAWC,MAAM,QAAjB,2BAGJ,kBAACC,GAAA,EAAD,KACKV,EAAWhD,KAAI,gBAAE2D,EAAF,EAAEA,OAAQb,EAAV,EAAUA,MAAOc,EAAjB,EAAiBA,IAAjB,OAChB,kBAACL,GAAA,EAAD,CAAUrK,IAAKyK,EAASC,GACpB,kBAACJ,GAAA,EAAD,CAAWC,MAAM,QAAjB,IAA0BE,GAC1B,kBAACH,GAAA,EAAD,CAAWC,MAAM,QAAQX,GACzB,kBAACU,GAAA,EAAD,CAAWC,MAAM,QAAjB,IAA0BG,Y,SCIvBC,GA5BA,SAAC,GAAkB,IAAjBjC,EAAgB,EAAhBA,KAOf,OACE,yBAAKpG,MAAO,CAACN,MAAO,OAAQkI,UAAW,SACrC,kBAAC,KAAD,CACIlI,MAAO,KACP4I,OAAQ,IACRlC,KAAMA,EACN3B,OAAQ,CACN8D,IAAK,EAAGzC,MAAO,GAAI0C,KAAM,GAAIzC,OAAQ,IAGvC,kBAAC,KAAD,CAAe0C,gBAAgB,QAC/B,kBAAC,KAAD,CAAOC,QAAQ,WACf,kBAAC,KAAD,MACA,kBAAC,KAAD,MACA,kBAAC,KAAD,MACA,kBAAC,KAAD,CAAMlO,KAAK,WAAWkO,QAAQ,MAAMC,OAAO,eCqDtCC,GA3DI,SAAC,GAA0B,EAAzBpK,SAA0B,IAAhBC,EAAe,EAAfA,MAAe,EACPC,qBADO,mBACpC8I,EADoC,KACxBqB,EADwB,OAEZnK,qBAFY,mBAEpCoK,EAFoC,KAE3BC,EAF2B,OAGZrK,oBAAS,GAHG,mBAGpCsK,EAHoC,KAG3BC,EAH2B,OAINvK,mBAAS,IAJH,mBAIpCwG,EAJoC,KAIxBC,EAJwB,OAKVzG,mBAAS,IALC,mBAKpCwK,EALoC,KAK5BC,EAL4B,KAM5C,OACE,kBAAClC,GAAD,KACE,kBAACC,GAAD,KACI,kBAACzE,GAAA,EAAD,CAAYvF,QAAQ,MAApB,4EACA,kBAACgJ,GAAA,EAAD,CAAMC,WAAS,EAAC1J,QAAS,EAAGG,WAAW,UACzC,kBAACsJ,GAAA,EAAD,CAAMU,MAAI,EAACH,GAAI,GAAIC,GAAI,GACrB,kBAAC0C,GAAA,EAAD,CAAYvO,GAAG,qBAAf,oBAGE,kBAACwO,GAAA,EAAD,CACAC,QAAQ,oBACRzO,GAAG,cACHqC,QAAQ,WACRnC,MAAOmK,EACP/E,WAAS,EACTL,SAAU,SAACd,GAAD,OA3BM,SAACmG,EAAoBgE,EAAenD,EAAmBuD,GACjFpE,EAAcoE,GADuF,MAE3CvD,EAAMC,MAAK,SAACpC,GAAD,OAAUA,EAAKhJ,KAAO0O,KAC3FJ,EAAU,CAACxH,SAH0F,EAE9FA,SACcyC,UAHgF,EAEpFA,UACeD,UAHqE,EAEzEA,UACeE,YAH0D,EAE9DA,cAyBZmF,CAAoBrE,EAAegE,EAAW1K,EAAMuH,MAAOhH,EAAEe,OAAOhF,SAE3E0D,EAAMuH,MA/BkBxB,KAAI,gBAAE3J,EAAF,EAAEA,GAAIH,EAAN,EAAMA,KAAN,OAAgB,kBAAC+O,GAAA,EAAD,CAAU/L,IAAK7C,EAAIE,MAAOF,GAAKH,QAkCzF,kBAACwL,GAAA,EAAD,CAAMU,MAAI,EAACH,GAAI,GAAIC,GAAI,GACrB,kBAAC9G,EAAA,EAAD,CACEtE,MAAOwN,EAAUI,EAAO9E,WAAa0E,EAAUI,EAAO/E,UACtDrE,SAAU,SAACd,GAAD,OAAO+J,EAAWW,OAAO1K,EAAEe,OAAOhF,SAC5C4O,WAAYzE,EAAU,yBAAqBgE,EAAO/E,UAA5B,eAA4C+E,EAAO9E,WAAc,GACvFpE,MAAO,CAACQ,UAAW0E,EAAa,OAAS,QAAU1K,KAAK,SAAS2F,WAAS,EAACtF,GAAG,iBAAiBqF,MAAM,QAAQhD,QAAQ,cAEzH,kBAACgJ,GAAA,EAAD,CAAMU,MAAI,GACV,kBAACrH,EAAA,EAAD,CACEa,UAAW8E,IAAe4D,GAAWA,EAAUI,EAAO9E,WAAa0E,EAAUI,EAAO/E,UACpFtG,QAAS,kBAAMgL,EHvDM,SAAChF,EAA+C+F,GAK3E,IAJA,IAAMC,EAAU,GACRlI,EAA0BkC,EAA1BlC,SAAU0C,EAAgBR,EAAhBQ,YACdyF,EAAexH,OAASgF,QACxByC,EAAgBH,EACXtD,EAAI,EAAGA,EAAI3E,EAAW2E,GAAG,EAAG,CACjC,IACM0D,EADMD,GAAiB1F,EAAc,KAClB0F,EACnBE,EAAY5C,GAAayC,GAC/BD,EAAQrD,KAAK,CACT2B,OAAQ7B,EAAI,EACZgB,MAAQF,GAAO6C,GACf7B,IAAM4B,IAEVD,EAAgBC,EAChBF,EAAeG,EAEnB,OAAOJ,EGsC4BK,CAAgB,CAACvI,SAAUuH,EAAOvH,SAAU0C,YAAa6E,EAAO7E,aAAcyE,KAC3G5L,QAAQ,YAAYU,MAAM,WAH5B,iCAKI4J,EAAa,kBAACtB,GAAA,EAAD,CAAMU,MAAI,EAACH,GAAI,IAChC,kBAAClH,EAAA,EAAD,CAAQS,MAAO,CAACxD,YAAa,QAASqB,QAAS,kBAAMoL,GAAW,IAAO/L,QAAQ,YAAYU,MAAM,WAAjG,SACA,kBAAC2B,EAAA,EAAD,CAAQrC,QAAQ,YAAYU,MAAM,UAAUC,QAAS,kBAAMoL,GAAW,KAAtE,YACQ,KACV,kBAAC/C,GAAA,EAAD,CAAMU,MAAI,EAACH,GAAI,IACZe,GAAcwB,EACb,kBAAC,GAAD,CAAOxB,WAAYA,IAAgB,KAGnCA,IAAewB,EAAU,kBAAC,GAAD,CAAQ5C,KAAMoB,IAAiB,UCrDrD2C,GAAe,SAACC,EAAeC,EAAYC,EAAmBjQ,GACvE,IAAMkQ,EAAY,GASlB,OARAH,EAAU/D,SAAQ,YAAmC,IAAjCnG,EAAgC,EAAhCA,MAAO9C,EAAyB,EAAzBA,KAAMoN,EAAmB,EAAnBA,KAC7BD,EAAM/D,KACF,kBAACiE,GAAA,EAAD,CAAUC,QAAM,EAAChN,IAAKwC,EAAOrC,QAAS,kBAb9B,SAACwM,EAAaC,EAAoB1D,EAAc4D,EAAgBnQ,GAC3EmQ,GAIDlF,aAAaqF,QACbtQ,EAAQmM,KAAK,OAJb6D,GAAO,GACPC,EAAc1D,IAUkCgE,CAAYP,EAAQC,EAAepK,EAAOsK,EAAMnQ,KAC1F,kBAACwQ,GAAA,EAAD,KAAc,kBAACzN,EAAD,OACd,kBAAC0N,GAAA,EAAD,CAAc7O,QAASiE,SAI1BqK,G,+gBC5BJ,IAAMQ,GAAuB7R,IAAOI,IAAV,MAQpB0R,GAAiB9R,IAAOI,IAAV,MASd2R,GAAgB/R,IAAOI,IAAV,M,qBCwDpBgF,GAAkBC,aA/DN,SAAC,GAAqC,IAApCC,EAAmC,EAAnCA,SAAUC,EAAyB,EAAzBA,MAAOpE,EAAkB,EAAlBA,QAAkB,EACXqE,oBAAS,GADE,mBAC3CwM,EAD2C,KAC7BC,EAD6B,OAEPzM,mBAAS,UAFF,mBAE3C4L,EAF2C,KAE5Bc,EAF4B,KAI7C/F,EAAWG,KAAKC,MAAMH,aAAaC,QAAQ,SAIjD,OAHKF,GACHhL,EAAQmM,KAAK,KAGX,6BACKnB,EAAO,oCACN,kBAACgG,GAAA,EAAD,CAAQvG,SAAS,SACf,kBAACwG,GAAA,EAAD,KACI,kBAAC7N,GAAA,EAAD,CACAG,MAAM,UACND,aAAW,cACXE,QAAS,kBAAMsN,GAAc,IAC7BI,KAAK,SACL,kBAAC,KAAD,OAEJ,kBAAC9I,GAAA,EAAD,CAAYvF,QAAQ,KAAKsO,QAAM,GAA/B,iBAKR,kBAACC,GAAA,EAAD,CAAQzN,KAAMkN,EAAcjO,QAAS,kBAAMkO,GAAc,KACzD,kBAACO,GAAA,EAAD,KACE,kBAACX,GAAD,KACE,kBAACtI,GAAA,EAAD,eACA,kBAACuI,GAAD,KACE,yBAAKtL,MAAO,OAAQC,IAAI,UAAUH,IAAKmM,QAEzC,kBAAClJ,GAAA,EAAD,KAAa4C,EAAKuG,WAClB,kBAACnJ,GAAA,EAAD,KAAa4C,EAAK1K,WAEnBwP,GAAa,CACZ,CAACjK,MAAO,SAAU9C,KAAMyO,MACxB,CAAC3L,MAAO,SAAU9C,KAAM0O,MACxB,CAAC5L,MAAO,QAAS9C,KAAM2O,KAAevB,MAAM,IAC3CW,EAAeC,EAAkB/Q,KAGpC,kBAAC4Q,GAAD,KFrBgB,SAACe,EAAgBxN,EAAeC,GACtD,OAAQuN,GACJ,IAAK,SACD,OAAO,kBAAC,GAAD,CAAOxN,SAAUA,EAAUC,MAAOA,IAC7C,IAAK,SACD,OAAO,kBAAC,GAAD,CAAYD,SAAUA,EAAUC,MAAOA,IAClD,QACI,OAAO,kBAAC,GAAD,CAAOD,SAAUA,EAAUC,MAAOA,KEexCwN,CAAW3B,EAAe9L,EAAUC,KAE/B,SAqBHgC,gBAhBS,SAAChC,GAAgB,IAC/BiC,EAAgCjC,EAAhCiC,aAAcwL,EAAkBzN,EAAlByN,cACtB,MAAO,CACHzN,MAAM,eAAKyN,EAAN,CAAqBxL,qBAIL,SAAClC,GAC1B,MAAO,CACHA,cAOSiC,CAA6CnC,IC1E7C6N,GAFE,kBAAM,2CCwBRC,GAlBO,WACpB,OACE,oCAMI,kBAAC,IAAD,KACF,kBAAC,IAAD,CAAOC,KAAK,IAAI3J,UAAW4J,GAAOC,OAAO,IACzC,kBAAC,IAAD,CAAOF,KAAK,aAAa3J,UAAW8J,GAAWD,OAAO,IACtD,kBAAC,IAAD,CAAO7J,UAAWyJ,QCPJM,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2D,0EChBwBC,KAAQC,IAAIC,UAAYF,KAAQC,IAAIC,SAM3D,SAASC,GAASC,GAIrB,MAAM,GAAN,OAFyB,2CAEzB,YAAoBA,G,iBCOdC,I,aAmBAC,I,aAiBOC,I,aAIAC,IAtDXC,GAAiBC,KACjBC,GAAWD,KAajB,SAAUL,GAAYO,GAAtB,kFACI,OADJ,SACUD,GAAI,CAAEjT,KAAMd,EAAa+E,OAAO,IAD1C,OAG2C,OAD/BnE,EAAuBoT,EAAvBpT,SAAUC,EAAamT,EAAbnT,SAFtB,SAGiDoT,KAAMC,KAAKX,GAAS,gBAAiB,CAC9E3S,WAAUC,aAJlB,uBAGY6L,KAAQlL,EAHpB,EAGoBA,QAAS2S,EAH7B,EAG6BA,UAGrB3S,EANR,iBAOQ,OAPR,UAOcuS,GAAI,CAAEjT,KAAMb,EAAe0L,KAAOwI,EAASzH,KAAM1J,QAASmR,EAASnR,UAPjF,QAQQ,OARR,UAQc4I,aAAawI,QAAQ,QAAS,KAR5C,QASQ,OATR,UAScxI,aAAawI,QAAQ,OAAQtI,KAAKuI,UAAUF,EAASzH,OATnE,QAUQ4H,YAAW,WACPN,EAAUrT,QAAQmM,KAAK,gBACxB,KAZX,wBAcQ,OAdR,UAcciH,GAAI,CAAEjT,KAAMZ,EAAYiU,aAdtC,QAgBI,OAhBJ,UAgBUJ,GAAI,CAAEjT,KAAMd,EAAa+E,OAAO,IAhB1C,yCAmBA,SAAU2O,GAAea,GAAzB,0FACI,OADJ,SACUR,GAAI,CAAEjT,KAAMd,EAAa+E,OAAO,IAD1C,OAGyC,OAD7BlE,EAAiD0T,EAAjD1T,SAFZ,EAE6D0T,EAAvCtT,gBAFtB,MAEiC,GAFjC,IAE6DsT,EAAxBvT,YAFrC,MAE4C,GAF5C,EAEgDJ,EAAa2T,EAAb3T,SAFhD,SAG+CqT,KAAMC,KAAKX,GAAS,mBAAoB,CAC/E3S,WAAUC,WAAUI,WAAUiR,UAAWlR,IAJjD,uBAGW0L,KAAQlL,EAHnB,EAGmBA,QAAS2S,EAH5B,EAG4BA,UAGpB3S,EANR,iBAOQ,OAPR,UAOcuS,GAAI,CAAEjT,KAAMT,EAAkBsL,KAAOwI,EAASzH,KAAO1J,QAASmR,EAASnR,UAPrF,QAQQsR,YAAW,WACPC,EAAa5T,QAAQmM,KAAK,gBAC3B,KAVX,wBAYQ,OAZR,UAYciH,GAAI,CAAEjT,KAAMR,EAAe6T,aAZzC,QAcI,OAdJ,UAcUJ,GAAI,CAAEjT,KAAMd,EAAa+E,OAAO,IAd1C,yCAiBO,SAAU4O,KAAV,kEACH,OADG,SACGE,GAAU1T,EAAmBsT,IADhC,wCAIA,SAAUG,KAAV,kEACH,OADG,SACGC,GAAUtT,EAAsBmT,IADnC,wC,iBCnDGc,I,aAMAC,I,aAUAC,I,aAWAC,I,aAiBOC,I,aAIAC,I,aAIAC,I,aAIAC,IA5DXlB,GAAiBC,KACjBC,GAAWD,KAGjB,SAAUU,GAAV,6EAEiB,OAFMxK,EAAvB,EAAuBA,QACnBxE,QAAQC,IAAIuE,GADhB,SAEuBiK,KAAMe,IAAIzB,GAAS,kBAAD,OAAmBvJ,KAF5D,OAGI,OADM0C,EAFV,gBAGUqH,GAAI,CAACjT,KAAKsI,GAAiB+K,SAAUzH,EAAKA,OAHpD,wCAMA,SAAU+H,GAAV,2EAEQ,OAFqBtT,EAA7B,EAA6BA,GAA7B,kBAEc8S,KAAMgB,OAAO1B,GAAS,UAAD,OAAWpS,KAF9C,OAGQ,OAHR,SAGc4S,GAAI,CAAEjT,KAAMwI,GAAqB4L,OAAQ/T,IAHvD,OAIQ,OAJR,SAIc4S,GAAI,CAAEjT,KAAMoI,GAAmBiL,SAAU,CAACpP,MAAO,iBAAkBvB,QAAS,aAJ1F,+BAMQ,OANR,oCAMcuQ,GAAI,CAAEjT,KAAMoI,GAAmBiL,SAAU,CAACpP,MAAO,mBAAoBvB,QAAS,WAN5F,uDAUA,SAAUkR,GAAV,2FAGyB,OAHCvK,EAA1B,EAA0BA,KAAMC,EAAhC,EAAgCA,SAAhC,SAEgBpJ,EAAsDmJ,EAAtDnJ,KAAMyJ,EAAgDN,EAAhDM,UAAWC,EAAqCP,EAArCO,UAAWC,EAA0BR,EAA1BQ,YAAa1C,EAAakC,EAAblC,SAFzD,SAG+BgM,KAAMC,KAAKX,GAAS,UAAW,CAAEvS,OAAMyJ,YAAWC,YAAWC,cAAa1C,WAAUmC,aAHnH,OAIQ,OAJR,SAGgBsC,EAHhB,EAGgBA,KAHhB,SAIcqH,GAAI,CAAEjT,KAAM0I,GAAkB2K,SAAUzH,IAJtD,OAKQ,OALR,UAKcqH,GAAI,CAAEjT,KAAMoI,GAAmBiL,SAAU,CAAEpP,MAAO,gBAAiBvB,QAAS,aAL1F,gCAOQ,OAPR,oCAOcuQ,GAAI,CAAEjT,KAAMoI,GAAmBiL,SAAU,CAACpP,MAAO,mBAAoBvB,QAAS,WAP5F,uDAWA,SAAUmR,GAAV,qFAQyB,OARExK,EAA3B,EAA2BA,KAAMhJ,EAAjC,EAAiCA,GAAjC,SAEcgU,EAAWC,OAAOC,KAAKlL,GAAMmL,QAAO,SAACpI,GAAD,OAAyB,OAAf/C,EAAK+C,MACnDqI,EAAW,GACjBJ,EAASxI,SAAQ,SAAA3I,GACbuR,EAAKvR,GAAOmG,EAAKnG,MAErBwB,QAAQC,IAAI8P,GAPpB,SAQ+BtB,KAAMF,IAAIR,GAAS,UAAD,OAAWpS,IAAQoU,GARpE,OASQ,OATR,SAQgB7I,EARhB,EAQgBA,KARhB,UAScqH,GAAI,CAAEjT,KAAM4I,GAAmByK,SAAUzH,IATvD,QAUQ,OAVR,UAUcqH,GAAI,CAAEjT,KAAMoI,GAAmBiL,SAAU,CAAEpP,MAAO,eAAgBvB,QAAS,aAVzF,gCAYQ,OAZR,oCAYcuQ,GAAI,CAAEjT,KAAMoI,GAAmBiL,SAAU,CAACpP,MAAO,mBAAoBvB,QAAS,WAZ5F,uDAiBO,SAAUoR,KAAV,kEACH,OADG,SACGf,GAAU1K,GAAmBqL,IADhC,wCAIA,SAAUK,KAAV,kEACH,OADG,SACGhB,GAAUxK,GAAmBoL,IADhC,wCAIA,SAAUK,KAAV,kEACH,OADG,SACGjB,GAAUtK,GAAgBmL,IAD7B,wCAIA,SAAUK,KAAV,kEACH,OADG,SACGlB,GAAUpK,GAAiBkL,IAD9B,wC,qBC5DQ,gFACX,OADW,SACLa,aAAI,CACNC,aAAK9B,IACL8B,aAAK7B,IACL6B,aAAKb,IACLa,aAAKZ,IACLY,aAAKX,IACLW,aAAKV,MAPE,wC,cCATW,GAAY,CACd9O,SAAS,EACThB,SAAU,CACRtB,MAAM,EACN9C,QAAS,GACTwB,QAAS,IAEX2I,KAAM,CACJ/K,SAAU,GACVsR,UAAW,GACXjR,SAAU,KA+BD+F,GA3BM,eAACjC,EAAD,uDAAS2Q,GAAW5R,EAApB,8CACnB6R,aAAQ5Q,GAAO,SAAA6Q,GACb,OAAQ9R,EAAOhD,MACb,KAAKN,EACHoV,EAAMhQ,SAAStB,MAAO,EACtB,MACF,KAAKrE,EACL,KAAKI,EACHuV,EAAMjK,KAAO7H,EAAO6H,KACpBiK,EAAMhQ,SAAStB,MAAO,EACtBsR,EAAMhQ,SAASpE,QAAU,UACzBoU,EAAMhQ,SAAS5C,QAAUc,EAAOd,QAChC,MACF,KAAK9C,EACL,KAAKI,EACHsV,EAAMhQ,SAAStB,MAAO,EACtBsR,EAAMhQ,SAASpE,QAAU,QACzBoU,EAAMhQ,SAAS5C,QAAUc,EAAOqQ,SAChC,MACF,KAAKnU,EACL,KAAKI,EACHwV,EAAMhP,QAAU9C,EAAOiB,W,UC9BzB2Q,GAAsB,CACxB9O,SAAS,EACTqF,aAAc,CACVlH,MAAO,GACPT,MAAM,EACNd,QAAS,IAEb8I,MAAO,ICdEuJ,GAAW,CACpB7O,gBACAwL,cDgBkB,eAACzN,EAAD,uDAAS2Q,GAAW5R,EAApB,8CAClB6R,aAAQ5Q,GAAO,SAAA6Q,GACX,OAAQ9R,EAAOhD,MACX,KAAKsI,GACDwM,EAAMtJ,MAAQxI,EAAOqQ,SACrB,MACJ,KAAK7K,GACD,IAAMwM,EAASF,EAAMtJ,MAAMgJ,QAAO,SAACpI,GAAD,OAAcA,EAAK/L,KAAO2C,EAAOoR,UACnEU,EAAMtJ,MAAQwJ,EACd,MACJ,KAAKtM,GACDoM,EAAMtJ,MAAN,uBAAkBsJ,EAAMtJ,OAAxB,CAA+BxI,EAAOqQ,WACtC,MACJ,KAAKzK,GACD,IAAMqM,EAAYH,EAAMtJ,MAAM0J,WAAU,SAAC7L,GAAD,OAAcA,EAAKhJ,KAAO2C,EAAOqQ,SAAShT,MAC5E8U,EAAeb,OAAOC,KAAKvR,EAAOqQ,UAClC+B,EAAiB,GACvBD,EAAatJ,SAAQ,SAACwJ,GAClBD,EAAWC,GAASrS,EAAOqQ,SAASgC,MAExCP,EAAMtJ,MAAMyJ,GAAaG,EACzB,MACJ,KAAKhN,GACD0M,EAAM3J,aAAa3H,MAAO,EAC1BsR,EAAM3J,aAAalH,MAAQjB,EAAOqQ,SAASpP,MAC3C6Q,EAAM3J,aAAazI,QAAUM,EAAOqQ,SAAS3Q,QAC7C,MACJ,KAAKhD,GACDoV,EAAM3J,aAAa3H,MAAO,QElCpC8R,GAAgBC,cAChBC,GAAcC,YAAgBV,IAC9BW,GAAiBC,cACjBC,GAAQC,YAAYL,GAAaM,YAAgBJ,KACvDA,GAAeK,IAAIC,IAEnBC,IAASC,OACL,kBAAC,IAAD,CAAUN,MAAOA,IACb,kBAAC,IAAD,CAAQ/V,QAASyV,IACb,kBAAC,GAAD,QAGNa,SAASC,eAAe,SRiHxB,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMC,MAAK,SAAAC,GACjCA,EAAaC,kB","file":"static/js/main.73fc616b.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/Logo.0018297e.png\";","module.exports = __webpack_public_path__ + \"static/media/Profile.f7a8ba72.png\";","import styled from 'styled-components';\nimport breakpoint from 'styled-components-breakpoint';\nimport { Card } from '@material-ui/core';\n\nexport const LoginContainer = styled(Card)`\nbackground: #4CA1AF;  /* fallback for old browsers */\nbackground: -webkit-linear-gradient(to bottom, #C4E0E5, #4CA1AF);  /* Chrome 10-25, Safari 5.1-6 */\nbackground: linear-gradient(to bottom, #C4E0E5, #4CA1AF); /* W3C, IE 10+/ Edge, Firefox 16+, Chrome 26+, Opera 12+, Safari 7+ */\n\n    width: 80%;\n    padding: 22px;\n    ${breakpoint('desktop')`\n        width: 50%;\n    `}\n`;\n\nexport const Container = styled.div`\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    height: 100vh;\n    background: red;\n    background: #457fca;  /* fallback for old browsers */\nbackground: -webkit-linear-gradient(to left, #5691c8, #457fca);  /* Chrome 10-25, Safari 5.1-6 */\nbackground: linear-gradient(to left, #5691c8, #457fca); /* W3C, IE 10+/ Edge, Firefox 16+, Chrome 26+, Opera 12+, Safari 7+ */\n\n`;\n\nexport const HeaderContainer = styled.div`\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    flex-direction: column;\n`;\n\nexport const LogoContainer = styled.div`\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    width: 250px;\n    height: 150px;\n    border-radius: 100%;\n    margin: 20px 0;\n    background: transparent;\n    font-size: 72px;\n`;","const prefix = 'containers/login';\nexport const LOGIN_START = `${prefix}/LOGIN_START`;\nexport const LOGIN_SUCCESS = `${prefix}/LOGIN_SUCCESS`;\nexport const LOGIN_FAIL = `${prefix}/LOGIN_FAIL`;\nexport const LOGIN_START_SAGAS = `${prefix}/LOGIN_START_SAGAS`;\n\nexport const REGISTER_START = `${prefix}/REGISTER_START`;\nexport const REGISTER_SUCCESS = `${prefix}/REGISTER_SUCCESS`;\nexport const REGISTER_FAIL = `${prefix}/REGISTER_FAIL`;\nexport const REGISTER_START_SAGAS = `${prefix}/REGISTER_START_SAGAS`;\n\nexport const CLOSE_NOTIFICATION = `${prefix}/CLOSE_NOTIFICATION`;","import { LOGIN_START_SAGAS, CLOSE_NOTIFICATION, REGISTER_START_SAGAS } from \"./constants\";\n\ntype form = {\n    username: string,\n    password: string,\n    name?: string,\n    lastname?: string\n}\n\nexport function makeLogin(form:form, history:any) {\n  const { username, password } = form;\n    return {\n      type: LOGIN_START_SAGAS,\n      username,\n      password,\n      history\n    };\n  }\n\nexport function makeRegister(form:form, history:any ) {\n  const { username, password, name, lastname } = form;\n    return {\n      type: REGISTER_START_SAGAS,\n      username,\n      password,\n      name,\n      lastname,\n      history\n    };\n  }\n  \n\nexport function closeNotification() {\n  return {\n    type: CLOSE_NOTIFICATION\n  }\n}","\nexport const formatFormData = (id:string, form: any, setValues: any, value: string) => {\n    return setValues({...form, [id]: value})\n}\n\nexport const nameValidator = /^(?![\\s.]+$)[a-zA-Z\\s.]*$/;\n","import React from 'react';\nimport clsx from 'clsx';\nimport CheckCircleIcon from '@material-ui/icons/CheckCircle';\nimport ErrorIcon from '@material-ui/icons/Error';\nimport InfoIcon from '@material-ui/icons/Info';\nimport CloseIcon from '@material-ui/icons/Close';\nimport { amber, green } from '@material-ui/core/colors';\nimport IconButton from '@material-ui/core/IconButton';\nimport Snackbar from '@material-ui/core/Snackbar';\nimport SnackbarContent from '@material-ui/core/SnackbarContent';\nimport WarningIcon from '@material-ui/icons/Warning';\nimport { makeStyles, Theme } from '@material-ui/core/styles';\n\nconst variantIcon = {\n  success: CheckCircleIcon,\n  warning: WarningIcon,\n  error: ErrorIcon,\n  info: InfoIcon,\n};\n\nconst useStyles1 = makeStyles((theme: Theme) => ({\n  success: {\n    backgroundColor: green[600],\n  },\n  error: {\n    backgroundColor: theme.palette.error.dark,\n  },\n  info: {\n    backgroundColor: theme.palette.primary.main,\n  },\n  warning: {\n    backgroundColor: amber[700],\n  },\n  icon: {\n    fontSize: 20,\n  },\n  iconVariant: {\n    opacity: 0.9,\n    marginRight: theme.spacing(1),\n  },\n  message: {\n    display: 'flex',\n    alignItems: 'center',\n  },\n}));\n\nexport interface Props {\n  className?: string;\n  message?: string;\n  onClose?: () => void;\n  variant: keyof typeof variantIcon;\n  open: boolean;\n  handleClose?: () => void;\n}\n\nfunction MySnackbarContentWrapper(props: Props) {\n  const classes = useStyles1();\n  const { className, message, onClose, variant, ...other } = props;\n  const Icon = variantIcon[variant];\n\n  return (\n    <SnackbarContent\n      className={clsx(classes[variant], className)}\n      aria-describedby=\"client-snackbar\"\n      message={\n        <span id=\"client-snackbar\" className={classes.message}>\n          <Icon className={clsx(classes.icon, classes.iconVariant)} />\n          {message}\n        </span>\n      }\n      action={[\n        <IconButton key=\"close\" aria-label=\"close\" color=\"inherit\" onClick={onClose}>\n          <CloseIcon className={classes.icon} />\n        </IconButton>,\n      ]}\n      {...other}\n    />\n  );\n}\n\n\nexport default function CustomizedSnackbars({message, variant, handleClose, open}:Props) {\n  return (\n    <div>\n      <Snackbar\n        anchorOrigin={{\n          vertical: 'top',\n          horizontal: 'right',\n        }}\n        open={open}\n        autoHideDuration={6000}\n        onClose={handleClose}\n      >\n        <MySnackbarContentWrapper\n          onClose={handleClose}\n          open={open}\n          variant={variant}\n          message={message}\n        />\n      </Snackbar>\n    </div>\n  );\n}","import React, { useState } from 'react';\nimport { Button, TextField, CircularProgress } from '@material-ui/core';\nimport { withRouter } from 'react-router-dom';\nimport { LoginContainer, Container, HeaderContainer, LogoContainer } from './styled';\nimport { connect } from 'react-redux';\nimport { makeLogin, closeNotification, makeRegister } from './actions';\nimport { formatFormData, nameValidator } from './helpers';\nimport CustomizedSnackbars from '../../components/Notification';\nimport Logo from '../../assets/Logo.png'\n\nconst handleEnter = (keycode:number, register:boolean, history:any, form:any, dispatch:any) => {\n    if (keycode === 13) {\n        if (register) {\n            dispatch(makeRegister(form, history))\n        } else {\n            console.log('ye')\n            dispatch(makeLogin(form, history))\n        }\n    }\n}\n\nconst Login = ({dispatch, state, history}:any) => {\n    const [ register, setRegister ] = useState(false);\n    const [ form, setForm ] = useState({username:'', password: '', name:'', lastname: ''});\n    return (\n        <Container tabIndex={1} \n            onKeyDown={(e) => (form.username && form.password) ? handleEnter(e.keyCode, register, history, form, dispatch) : null}>\n    <CustomizedSnackbars \n        message={state.feedBack.message} \n        variant={state.feedBack.success} \n        handleClose={() => dispatch(closeNotification())} \n        open={state.feedBack.open} />\n    <LoginContainer>\n        <HeaderContainer>\n            <div>\n                <Button \n                    color={!register ? 'primary' : 'default'} \n                    onClick={() => setRegister(false)}>Acceder</Button>\n                <Button color={register ? 'primary' : 'default'} \n                    onClick={() => setRegister(true)}\n                    >Registrarse</Button>\n            </div>\n            <LogoContainer>\n                <img src={Logo} width={'100%'} alt='MiInversion' />\n            </LogoContainer>\n            {register ? <> \n                <TextField\n                    error={!nameValidator.test(form.name)}\n                    onChange={(e) => formatFormData('name', form, setForm, e.target.value)} \n                    style={{marginBottom: '20px'}} label=\"Nombre\" variant=\"outlined\" fullWidth />\n                <TextField \n                    error={!nameValidator.test(form.lastname)}\n                    onChange={(e) => formatFormData('lastname', form, setForm, e.target.value)} \n                    style={{marginBottom: '20px'}} label=\"Apellido\" variant=\"outlined\" fullWidth />\n            </> : null\n            }\n            <TextField \n                onChange={(e) => formatFormData('username', form, setForm, e.target.value)} \n                style={{marginBottom: '20px'}} label=\"Nombre de usuario\" variant=\"outlined\" fullWidth />\n            <TextField \n                type=\"password\"\n                onChange={(e) => formatFormData('password', form, setForm, e.target.value)} \n                style={{marginBottom: '20px'}} label=\"Contraseña\" variant=\"outlined\" fullWidth />\n            <Button\n                disabled={!form.username || !form.password}\n                onClick={() => dispatch(register ? makeRegister(form, history) : makeLogin(form, history))}\n                variant=\"contained\" color=\"primary\" size=\"large\">Acceder</Button>\n        { state.loading ? <CircularProgress style={{marginTop: '12px'}} />: null }\n        </HeaderContainer>\n</LoginContainer>\n</Container>\n    )\n};\n\nconst mapStateToProps = (state: any) => {\n    const { LoginReducer } = state;\n    return {\n        state: LoginReducer\n    }\n}\n\nconst mapDispatchToProps = (dispatch: any) => {\n    return {\n        dispatch\n    }\n}\n\nconst componentRouter = withRouter(Login)\n\nexport default connect(mapStateToProps, mapDispatchToProps)(componentRouter);","import React from 'react';\nimport { Dialog, DialogTitle, DialogContent, DialogContentText, DialogActions, Button } from '@material-ui/core';\n\ntype Props = {\n    handleClose: () => void,\n    open: boolean,\n    handleAccept: () => void\n}\n\nconst DeleteModal = ({handleClose, open, handleAccept}:Props) => <Dialog\n    open={open}\n    onClose={() => handleClose()}\n    >\n    <DialogTitle>{\"¿Desea eliminar este plan de inversión?\"}</DialogTitle>\n    <DialogContent>\n    <DialogContentText>\n    Una vez eliminado este ya no estara disponible en la seccion de planes\n    </DialogContentText>\n    </DialogContent>\n    <DialogActions>\n    <Button onClick={() => handleClose()} color=\"primary\">\n        Cancelar\n    </Button>\n    <Button onClick={() => handleAccept()} color=\"primary\" autoFocus>\n        Eliminar\n    </Button>\n    </DialogActions>\n</Dialog>\n\nexport default DeleteModal;","import styled, { keyframes } from 'styled-components';\n\ntype ContainerBase = {\n    delay: any\n}\n\nconst bounceIn = keyframes`\nfrom,\n    20%,\n    40%,\n    60%,\n    80%,\n    to {\n      animation-timing-function: cubic-bezier(0.215, 0.61, 0.355, 1);\n    }\n  \n    0% {\n      opacity: 0;\n      transform: scale3d(0.3, 0.3, 0.3);\n    }\n  \n    20% {\n      transform: scale3d(1.1, 1.1, 1.1);\n    }\n  \n    40% {\n      transform: scale3d(0.9, 0.9, 0.9);\n    }\n  \n    60% {\n      opacity: 1;\n      transform: scale3d(1.03, 1.03, 1.03);\n    }\n  \n    80% {\n      transform: scale3d(0.97, 0.97, 0.97);\n    }\n  \n    to {\n      opacity: 1;\n      transform: scale3d(1, 1, 1);\n    }\n`\n    \n  \nexport const CardContainer = styled.div<ContainerBase>`    \n    opacity: 0;\n    animation: .6s ${bounceIn} forwards;\n    animation-delay: ${({delay}) => delay};\n`;","import React from 'react';\nimport { Card, CardHeader, Avatar, IconButton, CardContent, Typography, CardActions } from '@material-ui/core';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport EditIcon from '@material-ui/icons/Edit';\nimport moment from 'moment';\nimport { CardContainer } from './styled';\n\ntype Props = {\n    id: string,\n    owner: string,\n    title: string,\n    min: string,\n    max: string,\n    rate: string,\n    duration: number,\n    isFeature: boolean,\n    delay: string,\n    created_at: string,\n    handleDelete: (id: string) => void,\n    handleEdit: (id: string) =>void,\n}\n\nconst PlansCard = ({min, max, rate, duration, delay, handleDelete, handleEdit, id, title, created_at, owner, isFeature}: Props) => <CardContainer delay={delay}>\n<Card >\n<CardHeader\n  avatar={\n    <Avatar aria-label=\"recipe\" >\n      {owner[0] || '?'}\n    </Avatar>\n  }\n  title={title}\n  subheader={moment(created_at).format('LL')}\n/>\n<CardContent>\n  <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\n    Inversion minima : {min}\n  </Typography>\n  <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\n    Inversion maxima : {max}\n  </Typography>\n  <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\n    Tasa mensual : {rate} %\n  </Typography>\n  <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\n    Duracion del plan(meses) : {duration}\n  </Typography>\n</CardContent>\n<CardActions>\n  { !isFeature ?  <>\n    <IconButton aria-label=\"Edit\" onClick={() => handleEdit(id)}>\n    <EditIcon />\n  </IconButton>\n  <IconButton aria-label=\"Delete\" onClick={() => handleDelete(id)}>\n    <DeleteIcon />\n  </IconButton>\n  </> : <Typography variant=\"subtitle1\" color=\"primary\">Plan Especial</Typography>}\n</CardActions>\n\n</Card>\n</CardContainer>\n    \n\nexport default PlansCard;","const prefix = '/containers/dashboard/plans';\n\nexport const CLOSE_NOTIFICATION = `${prefix}/PLAN_CLOSE_NOTIFIACTION`;\nexport const OPEN_NOTIFICATION = `${prefix}/PLAN_OPEN_NOTIFICATION`;\n\nexport const PLANS_START_SAGAS = `${prefix}/PLAN_START_SAGAS`;\nexport const PLANS_SET_PLANS = `${prefix}/PLANS_SET_PLANS`;\n\nexport const PLAN_DELETE_SAGAS = `${prefix}/PLAN_DELETE_SAGAS`;\nexport const PLAN_DELETE_SUCCESS = `${prefix}/PLAN_DELETE_SUCCESS`;\n\n\nexport const PLAN_ADD_SAGAS = `${prefix}/PLAN_ADD_SAGAS`;\nexport const PLAN_ADD_SUCCESS = `${prefix}/PLAN_ADD_SUCCESS`;\n\nexport const PLAN_EDIT_SAGAS = `${prefix}/PLAN_EDIT_SAGAS`;\nexport const PLAN_EDIT_SUCCESS = `${prefix}/PLAN_EDIT_SUCCESS`;","import React from 'react';\nimport { Grid } from \"@material-ui/core\";\nimport PlansCard from '../../../components/PlanCard';\nimport { deletePlan, addPlan, editPlan } from './actions';\n\nexport type Plan = {\n    id: string,\n    name: string,\n    mininvest: string,\n    maxinvest: string,\n    monthlyrate: string,\n    duration: number,\n    isinitialplan: boolean,\n    created_at: string\n}\n\n\nconst buttonHandler = (modalHandler: (state: boolean) => void, setActivePlan: (id: string) => void, id:string) => {\n    modalHandler(true);\n    setActivePlan(id);\n}\n\nconst editHandler = (modal: any, setActivePlan: any, id: string, setIsEdit: any) => {\n    // modal, activePlan, \n    setIsEdit(true);\n    setActivePlan(id);\n    modal(true);\n}\n\nexport const drawPlans = (data:Array<Plan>, setModal:any, setActivePlan: any, setAddModal: any, setIsEdit: any, username:string) => {\n    const Plans:any = [];\n    data.forEach(({name, id, maxinvest, mininvest, monthlyrate, isinitialplan, duration, created_at}, i) => Plans.push(\n    <Grid xs={12} md={3} sm={6} item key={id}>\n        <PlansCard \n            created_at={created_at}\n            delay={`${i / 10}s`} \n            isFeature={isinitialplan} \n            owner={username} \n            title={name} \n            id={id}\n            handleDelete={(id) => buttonHandler(setModal, setActivePlan, id)}\n            handleEdit={(id) => editHandler(setAddModal, setActivePlan, id, setIsEdit)}\n            max={maxinvest} \n            min={mininvest} \n            rate={monthlyrate} \n            duration={duration} \n            />\n    </Grid>))\nreturn Plans;\n}\n\nexport const handleAcept = (active: string, dispatch: any, setModal: any) => {\n    setModal(false);\n    dispatch(deletePlan(active))\n}\n\n\nexport const handleAddAcept = (dispatch: any, form: any, setAddModal: any, agentId: string, isEdit: boolean, planid: string) => {\n    if (isEdit) {\n        dispatch(editPlan(form, planid))\n    } else {\n        dispatch(addPlan(form, agentId))\n    }\n    setAddModal(false);\n}\n","import { PLANS_START_SAGAS, PLAN_DELETE_SAGAS, OPEN_NOTIFICATION, CLOSE_NOTIFICATION, PLAN_ADD_SAGAS, PLAN_EDIT_SAGAS } from \"./contants\";\n\nexport function getPlans(agentId:string) {\n    return {\n        type: PLANS_START_SAGAS,\n        agentId\n    }\n}\n\nexport function deletePlan(id: string) {\n    return {\n        type: PLAN_DELETE_SAGAS,\n        id\n    }\n}\n\nexport function addPlan(plan: any, agenteid: string) {\n    return {\n        type: PLAN_ADD_SAGAS,\n        plan,\n        agenteid,\n    }\n}\n\nexport function editPlan(plan:any, id: string) {\n    return {\n        type: PLAN_EDIT_SAGAS,\n        plan,\n        id\n    }\n}\n\nexport function openNotification() {\n    return {\n        type: OPEN_NOTIFICATION\n    }\n}\n\nexport function closeNotification() {\n    return {\n        type: CLOSE_NOTIFICATION\n    }\n}","import React, { useState } from 'react';\nimport { Dialog, DialogTitle, DialogContent, DialogContentText, TextField, DialogActions, Button, InputAdornment } from '@material-ui/core';\n\ntype Props = {\n    open: boolean,\n    handleClose: () => void,\n    handleAcept: (form: any) => void,\n    isEdit: boolean,\n    initialForm: any\n}\n\ntype Fields = {\n    label: string,\n    id: string,\n    end: string\n}\n\nconst fields = [\n    { label: 'Nombre', id: 'name', end: ''},\n    { label: 'Inversión minima', id: 'mininvest', end: '$'},\n    { label: 'Inversión maxima', id: 'maxinvest', end: '$'},\n    { label: 'Tasa mensual', id: 'monthlyrate', end: '%'},\n    { label: 'Duracion del plan', id: 'duration', end: '(Meses)'}\n]\n\nconst initialState = {\n    name: null,\n    mininvest: null,\n    maxinvest: null,\n    monthlyrate: null,\n    duration: null\n}\n\n\n\nconst PlanModal = ({open, handleClose, handleAcept, isEdit, initialForm}:Props) => {\n    const [ form, setForm ] = useState(initialForm ? initialForm : initialState);\n    return (\n        <Dialog open={open} onClose={() => handleClose()}>\n            <DialogTitle id=\"form-dialog-title\">Nuevo plan de inversión</DialogTitle>\n            <DialogContent>\n            <DialogContentText>\n                Para crear un nuevo plan, ingrese los datos a continuacion:\n            </DialogContentText>\n            { fields.map(({label, id, end}:Fields) => <TextField\n                margin=\"dense\"\n                id={id}\n                label={label}\n                type={id === 'name' ? 'text' : 'number'}\n                fullWidth\n                defaultValue={isEdit ? initialForm[id] : ''}\n                key={id}\n                InputProps={{\n                    startAdornment: <InputAdornment position=\"end\">{end}</InputAdornment>,\n                  }}\n                onChange={(e) => setForm({...form, [id] : e.target.value})}\n                variant=\"outlined\"\n            />)}\n            </DialogContent>\n            <DialogActions>\n            <Button onClick={() => handleClose()} color=\"primary\">\n                Cancelar\n            </Button>\n            <Button\n                disabled={(!form.duration || !form.maxinvest || !form.mininvest || !form.monthlyrate || !form.name) && !isEdit} \n                onClick={() => handleAcept(form)} color=\"primary\">\n                  Aceptar\n            </Button>\n            </DialogActions>\n        </Dialog>\n    )\n}\n\nexport default PlanModal;","import React, { useEffect, useState } from 'react';\nimport { Grid, Fab } from '@material-ui/core';\nimport AddIcon from '@material-ui/icons/Add';\nimport DeleteModal from '../../../components/DeleteModal';\nimport { drawPlans, handleAcept, handleAddAcept } from './helpers';\nimport { getPlans, closeNotification } from './actions';\nimport CustomizedSnackbars from '../../../components/Notification';\nimport PlanModal from '../../../components/PlanModal';\n\nconst handleClose = (setModal:any, setActivePlan:any, setIsEdit:any) => {\n    setModal(false);\n    setActivePlan(-1);\n    setIsEdit(false);\n}\n\nconst Plans = ({dispatch, state}:any) => {\n    const [ modal, setModal ] = useState(false);\n    const [ addModal, setAddModal ] = useState(false);\n    const [ activePlan, setActivePlan ] = useState();\n    const [ isEdit, setIsEdit ] = useState(false);\n    const user:any = localStorage.getItem('user');\n    const { id, username }:any = JSON.parse(user);\n    useEffect(() => {\n        dispatch(getPlans(id))\n    }, []);\n    return (<div>\n        <CustomizedSnackbars\n        message={state.notification.state} \n        variant={state.notification.variant} \n        handleClose={() => dispatch(closeNotification())} \n        open={state.notification.open} />\n        <Fab\n            onClick={() => setAddModal(true)} \n            style={{position: 'fixed', zIndex: 4, right: 40, bottom: 40}} color=\"primary\">\n            <AddIcon />\n        </Fab>\n        <DeleteModal handleAccept={() => handleAcept(activePlan, dispatch, setModal)} open={modal} handleClose={() => setModal(false)} />\n        {\n            addModal ? <PlanModal \n            initialForm={state.plans.find(({id}:any) => id === activePlan)} \n            isEdit={isEdit} \n            handleAcept={(form) => handleAddAcept(dispatch, form, setAddModal, id, isEdit, activePlan)} \n            handleClose={() => handleClose(setAddModal, setActivePlan, setIsEdit)} open={addModal} /> : null\n        }\n        <Grid container spacing={4}>\n        {\n            state.plans ? drawPlans(state.plans, setModal, setActivePlan, setAddModal, setIsEdit, username) : null\n        }\n        </Grid>\n    </div>)\n}\n\n\nexport default Plans;","import styled from 'styled-components';\nimport { Paper } from '@material-ui/core';\n\nexport const EfficiencyContainer = styled.div`\n    display: flex;\n    align-items: center;\n    flex-direction: column;\n`;\n\n\nexport const CustomPaper = styled(Paper)`\n    width: 70%;\n    padding: 24px;\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n`;","import moment from 'moment';\n\nconst months = ['Enero','Febrero','Marzo', 'Abril', 'Mayo', 'Junio', 'Julio', 'Agosto', 'Septiembre', 'Octubre', 'Noviembre','Diciembre'];\n\n\n//diciembre = 11\nexport const monthlyRatePlan = (plan: {duration: number, monthlyrate: number}, invest:number) => {\n    const payload = [];\n    const { duration, monthlyrate } = plan;\n    let initialMonth = moment().month();\n    let initialInvest = invest;\n    for (let i = 0; i < duration ; i+=1) {\n        const acc = initialInvest * (monthlyrate / 100);\n        const nextInvest = acc + initialInvest;\n        const nextMonth = getNextMonth(initialMonth)\n        payload.push({\n            actual: i + 1,\n            month : months[nextMonth],\n            acc : nextInvest\n        });\n        initialInvest = nextInvest;\n        initialMonth = nextMonth;\n    }\n    return payload;\n}\n\nconst getNextMonth = (month:number) => {\n    if(month === 11) return 0;\n    return month + 1;\n}","import React from 'react';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport { Fade } from '@material-ui/core';\n\ntype Calc = {\n    actual: number,\n    month: string,\n    acc: number\n  }\n  \ntype Props = {\n    actualCalc: Array<Calc>\n}\n\nconst TableComponent = ({actualCalc} : any) => <Fade in={actualCalc !== undefined}>\n<div style={{width: '100%', overflowX: 'auto'}}>\n    <Table aria-label=\"simple table\">\n    <TableHead>\n        <TableRow>\n        <TableCell>Número de pago</TableCell>\n        <TableCell align=\"left\">Nombre del mes</TableCell>\n        <TableCell align=\"left\">Rendimiento acumulado</TableCell>\n        </TableRow>\n    </TableHead>\n    <TableBody>\n        {actualCalc.map(({actual, month, acc}:Calc) => (\n        <TableRow key={actual + acc}>\n            <TableCell align=\"left\">#{actual}</TableCell>\n            <TableCell align=\"left\">{month}</TableCell>\n            <TableCell align=\"left\">${acc}</TableCell>\n        </TableRow>\n        ))}\n    </TableBody>\n    </Table>\n    </div>\n</Fade> \n\nexport default TableComponent;","import React from 'react';\nimport {\n    LineChart, Line, XAxis, YAxis, CartesianGrid, Tooltip, Legend,\n  } from 'recharts';\n\ntype Props = {\n    data: any\n}\n\nconst Charts = ({data}:Props) => {\n  // const ref:any = useRef(null);\n  // const [ actualSize, setActualSize ] = useState(0);\n  // useEffect(() => {\n  //     setActualSize(ref?.current?.offsetWidth)\n  // }, [ref]);\n  // console.log(actualSize);\n  return (\n    <div style={{width: '100%', overflowX: 'auto'}}>\n      <LineChart\n          width={1200}\n          height={500}\n          data={data}\n          margin={{\n            top: 5, right: 30, left: 20, bottom: 5,\n          }}\n        >\n          <CartesianGrid strokeDasharray=\"3 3\" />\n          <XAxis dataKey=\"actual\" />\n          <YAxis />\n          <Tooltip />\n          <Legend />\n          <Line type=\"monotone\" dataKey=\"acc\" stroke=\"#82ca9d\" />\n      </LineChart>\n    </div>\n  )\n};\n\nexport default Charts;","import React, { useState } from 'react';\nimport { Typography, MenuItem, Select, InputLabel, Grid, TextField, Button } from '@material-ui/core';\nimport { EfficiencyContainer, CustomPaper } from './styled';\nimport { monthlyRatePlan } from './helpers';\nimport Table from '../../../components/Table';\nimport Charts from '../../../components/Charts';\n\ntype Plan = {\n  id: string,\n  name: string,\n  mininvest: string,\n  maxinvest: string,\n  monthlyrate: string,\n  duration: number,\n  isinitialplan: boolean,\n}\n\nconst getPlans = (plans:Array<Plan>) => plans.map(({id, name}) => <MenuItem key={id} value={id}>{name}</MenuItem>);\n\nconst handlePlanSelection = (setActivePlan: any, setLimits:any, plans:Array<Plan>, selected:string) => {\n  setActivePlan(selected);\n  const {duration, maxinvest, mininvest, monthlyrate}:any = plans.find((plan) => plan.id === selected);\n  setLimits({duration, maxinvest, mininvest, monthlyrate})\n}\n\nconst Efficiency = ({dispatch, state}:any) => {\n  const [ actualCalc, setActualCalc] = useState();\n  const [ ammount, setAmmount ] = useState();\n  const [ isTable, setIsTable ] = useState(true);\n  const [ activePlan, setActivePlan ] = useState('');\n  const [ limits, setLimits ]:any = useState({});\n  return(\n    <EfficiencyContainer>\n      <CustomPaper>\n          <Typography variant=\"h6\">Ingresar los datos correspondientes para generar la tabla de rendimiento</Typography>\n          <Grid container spacing={2} alignItems=\"center\">\n        <Grid item xs={12} md={6}  >\n          <InputLabel id=\"select-plan-label\">\n            Seleccionar plan\n          </InputLabel>\n            <Select\n            labelId=\"select-plan-label\"\n            id=\"select-plan\"\n            variant=\"outlined\"\n            value={activePlan}\n            fullWidth\n            onChange={(e) => handlePlanSelection(setActivePlan, setLimits, state.plans, e.target.value as string)}\n          >\n            {getPlans(state.plans)}\n          </Select>\n        </Grid>\n        <Grid item xs={12} md={6}>\n          <TextField\n            error={ammount > limits.maxinvest || ammount < limits.mininvest}\n            onChange={(e) => setAmmount(Number(e.target.value))}\n            helperText={activePlan ? `Valores entre $${limits.mininvest} - $${limits.maxinvest}` : ''}\n            style={{marginTop: activePlan ? '34px' : '16px' }} type=\"number\" fullWidth id=\"outlined-basic\" label=\"Monto\" variant=\"outlined\" />\n        </Grid>\n        <Grid item>\n        <Button\n          disabled={!activePlan || !ammount || ammount > limits.maxinvest || ammount < limits.mininvest}\n          onClick={() => setActualCalc(monthlyRatePlan({duration: limits.duration, monthlyrate: limits.monthlyrate}, ammount))} \n          variant=\"contained\" color=\"primary\">Generar tabla de rendimiento</Button>\n        </Grid>\n          { actualCalc ? <Grid item xs={12}>\n        <Button style={{marginRight: '22px'}} onClick={() => setIsTable(true)} variant=\"contained\" color=\"primary\">Tabla</Button>\n        <Button variant=\"contained\" color=\"primary\" onClick={() => setIsTable(false)}>Grafica</Button>\n      </Grid> : null}\n      <Grid item xs={12}>\n        {actualCalc && isTable ? \n          <Table actualCalc={actualCalc} />: null\n        }\n        {\n          actualCalc && !isTable ? <Charts data={actualCalc} /> : null\n        }\n      </Grid>\n      </Grid>\n      \n      \n      </CustomPaper>\n    </EfficiencyContainer>\n  )\n};\n\nexport default Efficiency;","import React from 'react';\nimport { ListItem, ListItemIcon, ListItemText } from '@material-ui/core';\nimport Plans from './plans';\nimport Efficiency from './efficiency';\n\ntype dataItem = {\n    label: string\n    Icon: any\n    exit?: boolean\n}\n\nconst handleClick = (drawer: any, activeSection: any, item: string, exit?: boolean, history?: any) => {\n    if (!exit) {\n        drawer(false);\n        activeSection(item)\n    } else {\n        localStorage.clear();\n        history.push('/');\n    }\n}\nexport const getListItems = (dataItems:any, drawer:any, activeSection:any, history: any) => {\n    const Items:any = [];\n    dataItems.forEach(({label, Icon, exit}:dataItem) => {\n        Items.push(\n            <ListItem button key={label} onClick={() => handleClick(drawer, activeSection, label, exit, history)}>\n              <ListItemIcon><Icon /></ListItemIcon>\n              <ListItemText primary={label} />\n            </ListItem>\n        )\n    })\n    return Items;\n}\n\nexport const getSection = (section:string, dispatch: any, state: any) => {\n    switch (section) {\n        case 'Planes':\n            return <Plans dispatch={dispatch} state={state} />\n        case 'Tablas':\n            return <Efficiency dispatch={dispatch} state={state} />\n        default:\n            return <Plans dispatch={dispatch} state={state} />\n    }\n} ","import styled from 'styled-components';\n\nexport const InformationContainer = styled.div`\n    display: flex;\n    flex-direction: column;\n    justify-content: center;\n    align-items: center;\n    width: 250px;\n`;\n\nexport const ImageContainer = styled.div`\n    width: 100px;\n    height: 100px;\n    border-radius: 100%;\n    display: flex;\n    justify-content: center;\n    align-items: center;\n`;\n\nexport const MainContainer = styled.div`\n    padding: 24px;\n    margin-top: 64px;\n`;","import React, { useState } from 'react';\nimport { Drawer, AppBar, Toolbar, IconButton, Typography, List } from '@material-ui/core';\nimport { connect } from 'react-redux';\nimport MenuIcon from '@material-ui/icons/Menu';\nimport AppsIcon from '@material-ui/icons/Apps';\nimport ExitToAppIcon from '@material-ui/icons/ExitToApp';\nimport AssignmentIndIcon from '@material-ui/icons/AssignmentInd';\nimport { getListItems, getSection } from './helpers';\nimport { InformationContainer, ImageContainer, MainContainer } from './styled';\nimport ProfilePicture from '../../assets/Profile.png';\nimport { withRouter } from 'react-router-dom';\n\nconst Dashboard = ({dispatch, state, history}: any) => {\n    const [ isDrawerOpen, setDrawerOpen ] = useState(false);\n    const [ activeSection, setActiveSection ] = useState('Planes');\n    // const { user: { firstname, lastname} } = state.LoginReducer;\n    const user:any = JSON.parse(localStorage.getItem('user') as any);\n    if (!user) {\n      history.push('/');\n    }\n    return (\n        <div>\n            {user ? <>\n              <AppBar position=\"fixed\">\n                <Toolbar>\n                    <IconButton\n                    color=\"inherit\"\n                    aria-label=\"open drawer\"\n                    onClick={() => setDrawerOpen(true)}\n                    edge=\"start\" >\n                    <MenuIcon />\n                    </IconButton>\n                <Typography variant=\"h6\" noWrap>\n                    MiInversion\n                </Typography>\n                </Toolbar>\n        </AppBar>\n        <Drawer open={isDrawerOpen} onClose={() => setDrawerOpen(false)} >\n        <List>\n          <InformationContainer>\n            <Typography>Agente</Typography>\n            <ImageContainer>\n              <img width={'100%'} alt='Profile' src={ProfilePicture} />\n            </ImageContainer>\n            <Typography>{user.firstname}</Typography>\n            <Typography>{user.lastname}</Typography>\n          </InformationContainer>\n          {getListItems([\n            {label: 'Planes', Icon: AppsIcon},\n            {label: 'Tablas', Icon: AssignmentIndIcon},\n            {label: 'Salir', Icon: ExitToAppIcon, exit: true}\n          ], setDrawerOpen, setActiveSection, history)}\n        </List>\n        </Drawer>\n          <MainContainer>\n            {getSection(activeSection, dispatch, state)}\n          </MainContainer>\n            </> : null}\n        </div>\n    )\n};\n\nconst mapStateToProps = (state: any) => {\n  const { LoginReducer, PlanesReducer } = state;\n  return {\n      state: {...PlanesReducer, LoginReducer}\n  }\n}\n\nconst mapDispatchToProps = (dispatch: any) => {\n  return {\n      dispatch\n  }\n}\n\nconst componentRouter = withRouter(Dashboard)\n\n\nexport default connect(mapStateToProps, mapDispatchToProps)(componentRouter);","import React from 'react';\n\nconst NotFound = () => <div>not found</div>;\n\nexport default NotFound;","import React from 'react';\nimport './App.css';\nimport { Switch, Route } from 'react-router-dom';\nimport Login from './containers/login';\nimport Dashboard from './containers/dashboard';\nimport NotFound from './containers/notFound';\n// import CustomizedSnackbars from './components/Notification';\n\nconst App: React.FC = () => {\n  return (\n    <>\n    {/* <CustomizedSnackbars \n        message={'state.notification.message'} \n        variant={'success'} \n        handleClose={() => console.log('dispatch(closeNotification()')} \n        open={true} /> */}\n        <Switch>\n      <Route path='/' component={Login} exact={true} />\n      <Route path='/dashboard' component={Dashboard} exact={true} />\n      <Route component={NotFound} />\n    </Switch>\n    </>\n    \n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import process from \"process\";\n\nconst development: boolean = !process.env.NODE_ENV || process.env.NODE_ENV === 'development';\n\nexport function isDev(): boolean {\n    return development;\n}\n\nexport function apiRoute(controller:string) : string {\n    // const prefix = 'http://'\n    const domain = isDev() ? 'https://inversion-7d099.firebaseapp.com/' : 'https://inversion-7d099.firebaseapp.com/';\n    // const domain = isDev() ? `${prefix}localhost:3000` : `${prefix}/otraruta`;\n    return `${domain}/${controller}`\n}","import Axios from 'axios';\nimport * as Eff from 'redux-saga/effects' \n\nimport { LOGIN_START_SAGAS, LOGIN_SUCCESS, LOGIN_FAIL, REGISTER_START_SAGAS, REGISTER_FAIL, REGISTER_SUCCESS, LOGIN_START } from './constants';\nimport { apiRoute } from '../../utils';\nconst takeEvery: any = Eff.takeEvery;\nconst put: any = Eff.put;\n\ntype LoginType = {\n    type: string,\n    username: string,\n    password: string,\n    name?: string,\n    lastname?: string,\n    id: string,\n    history:any,\n}\n\n\nfunction* loginWorker(loginData: LoginType) {\n    yield put({ type: LOGIN_START, state: true });\n    const { username, password } = loginData;\n    const { data: { success, response} } = yield Axios.post(apiRoute('agente/login'), {\n        username, password\n    });\n    if (success) {\n        yield put({ type: LOGIN_SUCCESS, user : response.data, message: response.message });\n        yield localStorage.setItem('token', '1');\n        yield localStorage.setItem('user', JSON.stringify(response.data));\n        setTimeout(() => {\n            loginData.history.push('/dashboard');\n        }, 1000);\n    } else {\n        yield put({ type: LOGIN_FAIL, response});\n    }\n    yield put({ type: LOGIN_START, state: false });\n}\n\nfunction* registerWorker(registerData:LoginType) {\n    yield put({ type: LOGIN_START, state: true });\n    const { password, lastname = '', name = '', username } = registerData;\n    const {data: { success, response}} = yield Axios.post(apiRoute('agente/register'), {\n        username, password, lastname, firstname: name\n    });\n    if (success) {\n        yield put({ type: REGISTER_SUCCESS, user : response.data,  message: response.message });\n        setTimeout(() => {\n            registerData.history.push('/dashboard');\n        }, 1000);\n    } else {\n        yield put({ type: REGISTER_FAIL, response})\n    }\n    yield put({ type: LOGIN_START, state: false });\n}\n\nexport function* loginWatcher() {\n    yield takeEvery(LOGIN_START_SAGAS, loginWorker)\n}\n\nexport function* registerWatcher() {\n    yield takeEvery(REGISTER_START_SAGAS, registerWorker)\n}","import Axios from 'axios';\nimport * as Eff from 'redux-saga/effects';\nimport { apiRoute } from '../../../utils';\nimport { PLANS_START_SAGAS, PLANS_SET_PLANS, PLAN_DELETE_SAGAS, PLAN_DELETE_SUCCESS, OPEN_NOTIFICATION, PLAN_ADD_SAGAS, PLAN_ADD_SUCCESS, PLAN_EDIT_SAGAS, PLAN_EDIT_SUCCESS } from './contants';\nconst takeEvery: any = Eff.takeEvery;\nconst put: any = Eff.put;\n\n\nfunction* plansWorker({agentId}: {agentId: string}) {\n    console.log(agentId);\n    const data = yield Axios.get(apiRoute(`planes/usuario/${agentId}`));\n    yield put({type:PLANS_SET_PLANS, response: data.data});\n}\n\nfunction* plansDeleteWorker({id}: {id: string}) {\n    try {\n        yield Axios.delete(apiRoute(`planes/${id}`));\n        yield put({ type: PLAN_DELETE_SUCCESS, planId: id});\n        yield put({ type: OPEN_NOTIFICATION, response: {state: 'Plan eliminado', variant: 'success'}});\n    } catch (error) {\n        yield put({ type: OPEN_NOTIFICATION, response: {state: 'Ocurrio un error', variant: 'error'}});\n    }\n}\n\nfunction* plansAddWorker({plan, agenteid} : any) {\n    try {\n        const { name, mininvest, maxinvest, monthlyrate, duration } = plan;\n        const { data } = yield Axios.post(apiRoute('planes'), { name, mininvest, maxinvest, monthlyrate, duration, agenteid });\n        yield put({ type: PLAN_ADD_SUCCESS, response: data});\n        yield put({ type: OPEN_NOTIFICATION, response: { state: 'Plan agregado', variant: 'success'}});\n    } catch (error) {\n        yield put({ type: OPEN_NOTIFICATION, response: {state: 'Ocurrio un error', variant: 'error'}});\n    }\n}\n\nfunction* plansEditWorker({plan, id}: any) {\n    try {\n        const notNulls = Object.keys(plan).filter((item) => plan[item] !== null)\n        const body:any = {};\n        notNulls.forEach(key => {\n            body[key] = plan[key]\n        });\n        console.log(body);\n        const { data } = yield Axios.put(apiRoute(`planes/${id}`),  body );\n        yield put({ type: PLAN_EDIT_SUCCESS, response: data});\n        yield put({ type: OPEN_NOTIFICATION, response: { state: 'Plan editado', variant: 'success'}});\n    } catch (error) {\n        yield put({ type: OPEN_NOTIFICATION, response: {state: 'Ocurrio un error', variant: 'error'}});\n\n    }\n}\n\nexport function* plansWatcher() {\n    yield takeEvery(PLANS_START_SAGAS, plansWorker);\n}\n\nexport function* plansDeleteWatcher() {\n    yield takeEvery(PLAN_DELETE_SAGAS, plansDeleteWorker);\n}\n\nexport function* plansAddWatcher() {\n    yield takeEvery(PLAN_ADD_SAGAS, plansAddWorker);\n}\n\nexport function* plansEditWatcher() {\n    yield takeEvery(PLAN_EDIT_SAGAS, plansEditWorker);\n}","import { all, fork } from \"redux-saga/effects\";\nimport { loginWatcher, registerWatcher } from \"./containers/login/sagas\";\nimport { plansWatcher, plansDeleteWatcher, plansAddWatcher, plansEditWatcher } from './containers/dashboard/plans/sagas';\n\nexport default function* () {\n    yield all([\n        fork(loginWatcher),\n        fork(registerWatcher),\n        fork(plansWatcher),\n        fork(plansDeleteWatcher),\n        fork(plansAddWatcher),\n        fork(plansEditWatcher)\n    ])\n}","/* eslint-disable default-case */\nimport produce from 'immer';\nimport { LOGIN_SUCCESS, LOGIN_FAIL, CLOSE_NOTIFICATION, REGISTER_FAIL, REGISTER_SUCCESS, LOGIN_START, REGISTER_START } from './constants';\n\nconst initState = {\n    loading: false,\n    feedBack: {\n      open: false,\n      success: '',\n      message: ''\n    },\n    user: {\n      username: '',\n      firstname: '',\n      lastname: ''\n    }\n}\n\nconst LoginReducer = (state = initState, action: any) =>\n  produce(state, draft => {\n    switch (action.type) {\n      case CLOSE_NOTIFICATION:\n        draft.feedBack.open = false;\n        break;\n      case LOGIN_SUCCESS:\n      case REGISTER_SUCCESS:\n        draft.user = action.user;\n        draft.feedBack.open = true;\n        draft.feedBack.success = 'success';\n        draft.feedBack.message = action.message\n        break;\n      case LOGIN_FAIL:\n      case REGISTER_FAIL:\n        draft.feedBack.open = true;\n        draft.feedBack.success = 'error';\n        draft.feedBack.message = action.response;\n        break;\n      case LOGIN_START:\n      case REGISTER_START:\n        draft.loading = action.state;\n        break;\n    }\n  });\n\n\nexport default LoginReducer;","import produce from 'immer';\nimport { PLANS_SET_PLANS, PLAN_DELETE_SUCCESS, OPEN_NOTIFICATION, CLOSE_NOTIFICATION, PLAN_ADD_SUCCESS, PLAN_EDIT_SUCCESS } from './contants';\n\ntype InitState = {\n    loading: boolean,\n    notification: { state: string, open: boolean, variant: string},\n    plans: any\n}\n\nconst initState:InitState = {\n    loading: false,\n    notification: {\n        state: '',\n        open: false,\n        variant: ''\n    },\n    plans: [],\n}\n\n\nconst PlanesReducer = (state = initState, action:any) =>\n    produce(state, draft => {\n        switch (action.type) {\n            case PLANS_SET_PLANS:\n                draft.plans = action.response;\n                break;\n            case PLAN_DELETE_SUCCESS:\n                const result = draft.plans.filter((item:any) => item.id !== action.planId);\n                draft.plans = result;\n                break;\n            case PLAN_ADD_SUCCESS:\n                draft.plans = [...draft.plans, action.response];\n                break;\n            case PLAN_EDIT_SUCCESS:\n                const planIndex = draft.plans.findIndex((plan:any) => plan.id === action.response.id);\n                const editedFields = Object.keys(action.response);\n                const editedPlan:any = {};\n                editedFields.forEach((field) => {\n                    editedPlan[field] = action.response[field];\n                });\n                draft.plans[planIndex] = editedPlan;\n                break;\n            case OPEN_NOTIFICATION:\n                draft.notification.open = true;\n                draft.notification.state = action.response.state\n                draft.notification.variant = action.response.variant;\n                break;\n            case CLOSE_NOTIFICATION:\n                draft.notification.open = false\n                break;\n            default:\n                break;\n        }\n    })\n\nexport default PlanesReducer;","import LoginReducer from './containers/login/reducer';\nimport PlanesReducer from './containers/dashboard/plans/reducer';\nexport const reducers = {\n    LoginReducer,\n    PlanesReducer  \n}","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { createStore, combineReducers, applyMiddleware } from 'redux';\nimport { Provider } from 'react-redux';\nimport { createBrowserHistory } from \"history\";\nimport { Router } from 'react-router-dom';\nimport createSagaMiddleware from 'redux-saga'\n\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport rootSagas from './joinSagas';\nimport { reducers } from './joinReducers';\n\nconst customHistory = createBrowserHistory();\nconst rootReducer = combineReducers(reducers)\nconst sagaMiddleware = createSagaMiddleware()\nconst store = createStore(rootReducer, applyMiddleware(sagaMiddleware));\nsagaMiddleware.run(rootSagas);\n\nReactDOM.render(\n    <Provider store={store}>\n        <Router history={customHistory}>\n            <App />\n        </Router>\n    </Provider>\n    , document.getElementById('root'));\n\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}